name: Build and Deploy to Azure

on:
  workflow_dispatch:
    inputs:
      location:
        description: "Region"
        required: true
        default: "eastus"
        type: choice
        options:
          - eastus
          - eastus2
          - westus
          - westus2

env:
  RESOURCEGROUPNAME: java-postgres
  LOCATION: ${{ inputs.location }}
  REGISTRYSKU: "Standard"
  REGISTRYNAME: "javapostgres13579"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resources
        continue-on-error: false
        run: |
          if [ $(az group exists --name ${{ env.RESOURCEGROUPNAME }}) = false ]; then
            az group create -g ${{ env.RESOURCEGROUPNAME }} -l ${{ env.LOCATION }}
          fi
          az acr create -n ${{ env.REGISTRYNAME }} -g ${{ env.RESOURCEGROUPNAME }} --sku ${{ env.REGISTRYSKU }} --admin-enabled true
          az acr login -n ${{ env.REGISTRYNAME }}

      - name: Build and Push Docker Image
        continue-on-error: false
        run: |
          pushd app
          az acr build --image java-postgres:latest --registry ${{ env.REGISTRYNAME }} --file Dockerfile .
          popd
        #   docker build -t ${{ env.REGISTRYNAME }}.azurecr.io/java-postgres:latest .
        #   docker push ${{ env.REGISTRYNAME }}.azurecr.io/java-postgres:latest
        #   popd

      - name: Build and Push Docker Image
        continue-on-error: true
        run: |
          pushd charts/java-postgres
          helm package .
          helm push java-postgres-0.1.0.tgz oci://${{ env.REGISTRYNAME }}.azurecr.io/helm
          popd
  
#   deploy:
#     name: Deploy
#     needs: build
#     runs-on: ubuntu-latest
#   cleanup:
#     name: Cleanup
#     needs: deploy
#     runs-on: ubuntu-latest
#     steps:
#       - name: Azure authentication
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#       - name: Delete Resource Group
#         continue-on-error: true
#         run: |
#           az group delete -g ${{ env.RESOURCEGROUPNAME }} --yes
